---
meta:
  vault: (( concat "secret/" params.vault ))
params:
  cf_internal_network:  cf-core
  cf_edge_network:      cf-edge
  cf_runtime_network:   cf-runtime
  cf_db_network:        cf-db

  base_domain: (( param "What is the base domain for this Cloud Foundry?" ))
  system_domain: (( concat "system." params.base_domain ))
  apps_domains: [ (( concat "run." params.base_domain )) ]

  default_app_memory: 256

  app_services_networks: (( param "On what networks are the services that your applications will access?" ))
  cf_public_ips: (( param "What are the public IPs of your CF Load balancer?" ))

  skip_ssl_validation: false

  availability_zones:
    - z1
    - z2
    - z3

  log_level: info

  logger_port: 443

  stemcell_os:      ubuntu-trusty
  stemcell_version: latest

  consul_disk_pool:    consul
  postgres_disk_pool:  postgres
  mysql_disk_pool:     mysql
  blobstore_disk_pool: blobstore

  consul_instances:      3
  haproxy_instances:     2
  nats_instances:        2
  postgres_instances:    1
  mysql_instances:       3
  blobstore_instances:   1
  uaa_instances:         2
  api_instances:         2
  cc-worker_instances:   2
  cc-clock_instances:    1
  doppler_instances:     2
  loggregator_instances: 2
  router_instances:      2
  bbs_instances:         2
  diego_instances:       2
  access_instances:      2
  cell_instances:        3

  consul_vm_type:      small
  haproxy_vm_type:     small
  nats_vm_type:        small
  postgres_vm_type:    large
  mysql_vm_type:       large
  blobstore_vm_type:   medium
  uaa_vm_type:         medium
  api_vm_type:         medium
  cc-worker_vm_type:   medium
  cc-clock_vm_type:    small
  doppler_vm_type:     small
  loggregator_vm_type: medium
  router_vm_type:      small
  bbs_vm_type:         small
  diego_vm_type:       medium
  access_vm_type:      small
  cell_vm_type:        runtime
  errand_vm_type:      small

  ccdb_name:    ccdb
  ccdb_host:    (( param "What hostname/IP is the ccdb available at?" ))
  ccdb_port: (( param "What port is the ccdb listening on?" ))
  ccdb_scheme: (( param "Specify the type of database the ccdb is (postgres, mysql)" ))
  ccdb_user: (( param "Specify the user to connect to the ccdb" ))
  ccdb_password:  (( param "Specify the password of the ccdb user" ))

  uaadb_name:   uaadb
  uaadb_host:   (( param "What hostname/IP is the uaadb available at?" ))
  uaadb_port: (( param "What port is the uaadb listening on?" ))
  uaadb_scheme: (( param "Specify the type of database the uaadb is (postgres, mysql)" ))
  uaadb_user: (( param "Specify the user to connect to the uaadb" ))
  uaadb_password: (( param "Specify the password of the uaadb user" ))

  diegodb_name: diegodb
  diegodb_host: (( param "What hostname/IP is the diegodb available at?" ))
  diegodb_port: (( param "What port is the diegodb listening on?" ))
  diegodb_scheme: (( param "Specify the type of database the diegodb is (postgres, mysql)" ))
  diegodb_user: (( param "Specify the user to connect to the diegodb" ))
  diegodb_password: (( param "Specify the password of the diegodb user" ))

  routingdb_name: routingdb
  routingdb_host: (( param "What hostname/IP is the routingdb available at?" ))
  routingdb_port: (( param "What port is the routingdb listening on?" ))
  routingdb_scheme: (( param "Specify the type of database the routingdb is (postgres, mysql)" ))
  routingdb_user: (( param "Specify the user to connect to the routingdb" ))
  routingdb_password: (( param "Specify the password of the routingdb user" ))

  netpoldb_name: netpoldb
  netpoldb_host: (( param "What hostname/IP is the netpoldb available at?" ))
  netpoldb_port: (( param "What port is the netpoldb listening on?" ))
  netpoldb_scheme: (( param "Specify the type of database the netpoldb is (postgres, mysql)" ))
  netpoldb_user: (( param "Specify the user to connect to the netpoldb" ))
  netpoldb_password: (( param "Specify the password of the netpoldb user" ))

  silkdb_name: silkdb
  silkdb_host: (( param "What hostname/IP is the silkdb available at?" ))
  silkdb_port: (( param "What port is the silkdb listening on?" ))
  silkdb_scheme: (( param "Specify the type of database the silkdb is (postgres, mysql)" ))
  silkdb_user: (( param "Specify the user to connect to the silkdb" ))
  silkdb_password: (( param "Specify the password of the silkdb user" ))
