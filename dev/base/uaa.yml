---
instance_groups:
- name: uaa
  instances: (( grab params.uaa_instances ))
  vm_type: (( grab params.uaa_vm_type ))
  azs: (( grab params.availability_zones ))
  stemcell: default
  networks:
  - (( replace ))
  - name: (( grab params.cf_internal_network ))
  jobs:
  - name: uaa
    properties:
      uaadb:
        address: (( grab params.uaadb_host ))
        databases:
        - (( replace ))
        - name: (( grab params.uaadb_name ))
          citext: true
          tag: uaa
        db_scheme: (( grab params.uaadb_scheme ))
        port: (( grab params.uaadb_port ))
        roles:
        - (( replace ))
        - name: (( grab params.uaadb_user ))
          password: (( grab params.uaadb_password ))
          tag: admin
      uaa:
        admin:
          client_secret: (( grab meta.uaa.admin_client_secret ))
        clients:
          cc-service-dashboards:
            secret: (( grab meta.uaa.cc_broker_secret ))
          cc_routing:
            secret: (( grab meta.uaa.cc_routing_secret ))
          cloud_controller_username_lookup:
            secret: (( grab meta.uaa.cc_user_lookup_secret ))
          doppler:
            secret: (( grab meta.uaa.doppler_secret ))
          firehose:
            authorities: doppler.firehose,cloud_controller.admin
            authorized-grant-types: client_credentials #,refresh_token
            scope: openid,oauth.approvals,scim.userids,cloud_controller.read
            secret: (( grab meta.uaa.firehose_secret ))
          gorouter:
            secret: (( grab meta.uaa.gorouter_secret ))
          notifications:
            authorities: cloud_controller.admin,scim.read
            authorized-grant-types: client_credentials
            secret: (( grab meta.uaa.notifications_secret ))
          ssh-proxy:
            secret: (( grab meta.uaa.ssh_proxy_secret ))
            redirect-uri: (( concat meta.uaa.url "/login" ))
          routing_api_client:
            secret: (( grab meta.uaa.routing_api_secret ))
          network-policy:
            secret: (( grab meta.uaa.network_policy_secret ))
          tcp_emitter:
            secret: (( grab meta.uaa.tcp_emitter_secret ))
        logging_level: (( grab params.log_level ))
        jwt:
          policy:
            active_key_id: key-1
            keys:
              key-1:
                signingKey: (( grab meta.uaa.jwt_private_key ))
        scim:
          users:
            - name:     (( grab meta.admin.user ))
              password: (( grab meta.admin.password ))
        sslCertificate: (( grab meta.uaa.ssl_cert ))
        sslPrivateKey: (( grab meta.uaa.ssl_key ))
        url: (( grab meta.uaa.url ))
      login:
        saml:
          serviceProviderKey: (( grab meta.login.saml.service_provider_key ))
          serviceProviderCertificate: (( grab meta.login.saml.service_provider_certificate ))
  - name: metron_agent
    properties: (( grab meta.metron_agent_properties ))
  - name: route_registrar
    properties:
      route_registrar:
        routes:
        - name: uaa
          uris:
          - (( replace ))
          - (( concat "uaa." params.system_domain ))
          - (( concat "*.uaa." params.system_domain ))
          - (( concat "login." params.system_domain ))
          - (( concat "*.login." params.system_domain ))
  - name: statsd_injector
    properties: (( grab meta.statsd_injector ))

meta:
  admin:
    user:     admin
    password: (( vault meta.vault "/admin_user:password" ))

  uaa:
    admin_client_secret:   (( vault meta.vault "/uaa/client_secrets:admin_client" ))
    cc_broker_secret:      (( vault meta.vault "/uaa/client_secrets:cc_broker" ))
    cc_routing_secret:     (( vault meta.vault "/uaa/client_secrets:cc_routing" ))
    cc_user_lookup_secret: (( vault meta.vault "/uaa/client_secrets:cc_user_lookup" ))
    doppler_secret:        (( vault meta.vault "/uaa/client_secrets:doppler" ))
    firehose_secret:       (( vault meta.vault "/uaa/client_secrets:firehose" ))
    gorouter_secret:       (( vault meta.vault "/uaa/client_secrets:gorouter" ))
    notifications_secret:  (( vault meta.vault "/uaa/client_secrets:notifications" ))
    ssh_proxy_secret:      (( vault meta.vault "/uaa/client_secrets:ssh_proxy" ))
    tcp_emitter_secret:    (( vault meta.vault "/uaa/client_secrets:tcp_emitter" ))
    routing_api_secret:    (( vault meta.vault "/uaa/client_secrets:routing_api" ))
    network_policy_secret: (( vault meta.vault "/uaa/client_secrets:network_policy" ))

    jwt_private_key:       (( vault meta.vault "/uaa/jwt_signing_key:private" ))
    ssl_cert:        (( vault meta.vault "/uaa/certs/server:certificate" ))
    ssl_key:         (( vault meta.vault "/uaa/certs/server:key" ))
    ca_cert:         (( vault meta.vault "/uaa/certs/ca:certificate" ))

    url: (( concat "https://uaa." params.system_domain ))

  login:
    saml:
      service_provider_certificate: (( grab meta.uaa.ssl_cert ))
      service_provider_key:         (( grab meta.uaa.ssl_key ))
